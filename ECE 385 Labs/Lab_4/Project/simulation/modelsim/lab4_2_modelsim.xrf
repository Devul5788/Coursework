vendor_name = ModelSim
source_file = 1, U:/Downloads/playground1/playground1/adder9.sv
source_file = 1, U:/Downloads/playground1/playground1/adder1.sv
source_file = 1, U:/Downloads/playground1/playground1/HexDriver.sv
source_file = 1, U:/Downloads/playground1/playground1/reg8.sv
source_file = 1, U:/Downloads/playground1/playground1/counter.sv
source_file = 1, U:/Downloads/playground1/playground1/control.sv
source_file = 1, U:/Downloads/playground1/playground1/multiplier.sv
source_file = 1, U:/Downloads/playground1/playground1/testbench.sv
source_file = 1, U:/Downloads/playground1/playground1/Synchronizer.sv
source_file = 1, U:/Downloads/playground1/playground1/db/lab4_2.cbx.xml
design_name = multiplier
instance = comp, \~QUARTUS_CREATED_GND~I , ~QUARTUS_CREATED_GND~I, multiplier, 1
instance = comp, \HEX0[0]~output , HEX0[0]~output, multiplier, 1
instance = comp, \HEX0[1]~output , HEX0[1]~output, multiplier, 1
instance = comp, \HEX0[2]~output , HEX0[2]~output, multiplier, 1
instance = comp, \HEX0[3]~output , HEX0[3]~output, multiplier, 1
instance = comp, \HEX0[4]~output , HEX0[4]~output, multiplier, 1
instance = comp, \HEX0[5]~output , HEX0[5]~output, multiplier, 1
instance = comp, \HEX0[6]~output , HEX0[6]~output, multiplier, 1
instance = comp, \HEX1[0]~output , HEX1[0]~output, multiplier, 1
instance = comp, \HEX1[1]~output , HEX1[1]~output, multiplier, 1
instance = comp, \HEX1[2]~output , HEX1[2]~output, multiplier, 1
instance = comp, \HEX1[3]~output , HEX1[3]~output, multiplier, 1
instance = comp, \HEX1[4]~output , HEX1[4]~output, multiplier, 1
instance = comp, \HEX1[5]~output , HEX1[5]~output, multiplier, 1
instance = comp, \HEX1[6]~output , HEX1[6]~output, multiplier, 1
instance = comp, \HEX2[0]~output , HEX2[0]~output, multiplier, 1
instance = comp, \HEX2[1]~output , HEX2[1]~output, multiplier, 1
instance = comp, \HEX2[2]~output , HEX2[2]~output, multiplier, 1
instance = comp, \HEX2[3]~output , HEX2[3]~output, multiplier, 1
instance = comp, \HEX2[4]~output , HEX2[4]~output, multiplier, 1
instance = comp, \HEX2[5]~output , HEX2[5]~output, multiplier, 1
instance = comp, \HEX2[6]~output , HEX2[6]~output, multiplier, 1
instance = comp, \HEX3[0]~output , HEX3[0]~output, multiplier, 1
instance = comp, \HEX3[1]~output , HEX3[1]~output, multiplier, 1
instance = comp, \HEX3[2]~output , HEX3[2]~output, multiplier, 1
instance = comp, \HEX3[3]~output , HEX3[3]~output, multiplier, 1
instance = comp, \HEX3[4]~output , HEX3[4]~output, multiplier, 1
instance = comp, \HEX3[5]~output , HEX3[5]~output, multiplier, 1
instance = comp, \HEX3[6]~output , HEX3[6]~output, multiplier, 1
instance = comp, \Aval[0]~output , Aval[0]~output, multiplier, 1
instance = comp, \Aval[1]~output , Aval[1]~output, multiplier, 1
instance = comp, \Aval[2]~output , Aval[2]~output, multiplier, 1
instance = comp, \Aval[3]~output , Aval[3]~output, multiplier, 1
instance = comp, \Aval[4]~output , Aval[4]~output, multiplier, 1
instance = comp, \Aval[5]~output , Aval[5]~output, multiplier, 1
instance = comp, \Aval[6]~output , Aval[6]~output, multiplier, 1
instance = comp, \Aval[7]~output , Aval[7]~output, multiplier, 1
instance = comp, \Bval[0]~output , Bval[0]~output, multiplier, 1
instance = comp, \Bval[1]~output , Bval[1]~output, multiplier, 1
instance = comp, \Bval[2]~output , Bval[2]~output, multiplier, 1
instance = comp, \Bval[3]~output , Bval[3]~output, multiplier, 1
instance = comp, \Bval[4]~output , Bval[4]~output, multiplier, 1
instance = comp, \Bval[5]~output , Bval[5]~output, multiplier, 1
instance = comp, \Bval[6]~output , Bval[6]~output, multiplier, 1
instance = comp, \Bval[7]~output , Bval[7]~output, multiplier, 1
instance = comp, \Xval~output , Xval~output, multiplier, 1
instance = comp, \Clk~input , Clk~input, multiplier, 1
instance = comp, \Clk~inputclkctrl , Clk~inputclkctrl, multiplier, 1
instance = comp, \SW[1]~input , SW[1]~input, multiplier, 1
instance = comp, \Reset_Load_Clear~input , Reset_Load_Clear~input, multiplier, 1
instance = comp, \button_sync[1]|q~0 , button_sync[1]|q~0, multiplier, 1
instance = comp, \button_sync[1]|q , button_sync[1]|q, multiplier, 1
instance = comp, \SW[0]~input , SW[0]~input, multiplier, 1
instance = comp, \RegB|Data_Out~0 , RegB|Data_Out~0, multiplier, 1
instance = comp, \RegB|Data_Out[7]~1 , RegB|Data_Out[7]~1, multiplier, 1
instance = comp, \RegB|Data_Out[0] , RegB|Data_Out[0], multiplier, 1
instance = comp, \Controller|counter|count[0]~1 , Controller|counter|count[0]~1, multiplier, 1
instance = comp, \Controller|counter|count[0] , Controller|counter|count[0], multiplier, 1
instance = comp, \Controller|counter|Add0~1 , Controller|counter|Add0~1, multiplier, 1
instance = comp, \Controller|counter|count[2]~0 , Controller|counter|count[2]~0, multiplier, 1
instance = comp, \Controller|counter|count[1] , Controller|counter|count[1], multiplier, 1
instance = comp, \Controller|counter|Add0~0 , Controller|counter|Add0~0, multiplier, 1
instance = comp, \Controller|counter|count[2] , Controller|counter|count[2], multiplier, 1
instance = comp, \Controller|curr_state~19 , Controller|curr_state~19, multiplier, 1
instance = comp, \Controller|curr_state~20 , Controller|curr_state~20, multiplier, 1
instance = comp, \Controller|curr_state.add , Controller|curr_state.add, multiplier, 1
instance = comp, \Controller|curr_state~21 , Controller|curr_state~21, multiplier, 1
instance = comp, \Controller|curr_state.sub , Controller|curr_state.sub, multiplier, 1
instance = comp, \Controller|load_AX~0 , Controller|load_AX~0, multiplier, 1
instance = comp, \Controller|curr_state~18 , Controller|curr_state~18, multiplier, 1
instance = comp, \Controller|curr_state.shift , Controller|curr_state.shift, multiplier, 1
instance = comp, \Controller|curr_state~15 , Controller|curr_state~15, multiplier, 1
instance = comp, \Controller|curr_state~24 , Controller|curr_state~24, multiplier, 1
instance = comp, \Run~input , Run~input, multiplier, 1
instance = comp, \button_sync[0]|q~0 , button_sync[0]|q~0, multiplier, 1
instance = comp, \button_sync[0]|q , button_sync[0]|q, multiplier, 1
instance = comp, \Controller|curr_state~25 , Controller|curr_state~25, multiplier, 1
instance = comp, \Controller|curr_state.hold , Controller|curr_state.hold, multiplier, 1
instance = comp, \Controller|curr_state~13 , Controller|curr_state~13, multiplier, 1
instance = comp, \Controller|curr_state~16 , Controller|curr_state~16, multiplier, 1
instance = comp, \Controller|curr_state~26 , Controller|curr_state~26, multiplier, 1
instance = comp, \Controller|curr_state~27 , Controller|curr_state~27, multiplier, 1
instance = comp, \Controller|curr_state.print , Controller|curr_state.print, multiplier, 1
instance = comp, \Controller|curr_state~14 , Controller|curr_state~14, multiplier, 1
instance = comp, \Controller|curr_state~22 , Controller|curr_state~22, multiplier, 1
instance = comp, \Controller|curr_state~23 , Controller|curr_state~23, multiplier, 1
instance = comp, \Controller|curr_state.clear , Controller|curr_state.clear, multiplier, 1
instance = comp, \Controller|curr_state~28 , Controller|curr_state~28, multiplier, 1
instance = comp, \Controller|curr_state~29 , Controller|curr_state~29, multiplier, 1
instance = comp, \Controller|curr_state.working , Controller|curr_state.working, multiplier, 1
instance = comp, \Controller|curr_state~17 , Controller|curr_state~17, multiplier, 1
instance = comp, \Controller|curr_state.input_val , Controller|curr_state.input_val, multiplier, 1
instance = comp, \SW[2]~input , SW[2]~input, multiplier, 1
instance = comp, \SW[5]~input , SW[5]~input, multiplier, 1
instance = comp, \SW[7]~input , SW[7]~input, multiplier, 1
instance = comp, \Controller|clear_AX , Controller|clear_AX, multiplier, 1
instance = comp, \adder|FA1|c_out~0 , adder|FA1|c_out~0, multiplier, 1
instance = comp, \adder|FA2|S , adder|FA2|S, multiplier, 1
instance = comp, \SW[3]~input , SW[3]~input, multiplier, 1
instance = comp, \adder|FA2|c_out~0 , adder|FA2|c_out~0, multiplier, 1
instance = comp, \adder|FA3|c_out~0 , adder|FA3|c_out~0, multiplier, 1
instance = comp, \adder|FA4|S~0 , adder|FA4|S~0, multiplier, 1
instance = comp, \SW[4]~input , SW[4]~input, multiplier, 1
instance = comp, \adder|FA4|c_out~0 , adder|FA4|c_out~0, multiplier, 1
instance = comp, \adder|FA5|S~0 , adder|FA5|S~0, multiplier, 1
instance = comp, \adder|FA5|c_out~0 , adder|FA5|c_out~0, multiplier, 1
instance = comp, \adder|FA6|S~0 , adder|FA6|S~0, multiplier, 1
instance = comp, \RegA|Data_Out~13 , RegA|Data_Out~13, multiplier, 1
instance = comp, \adder|FA9|S~0 , adder|FA9|S~0, multiplier, 1
instance = comp, \SW[6]~input , SW[6]~input, multiplier, 1
instance = comp, \adder|FA6|c_out~0 , adder|FA6|c_out~0, multiplier, 1
instance = comp, \adder|FA7|c_out~0 , adder|FA7|c_out~0, multiplier, 1
instance = comp, \adder|FA8|c_out~0 , adder|FA8|c_out~0, multiplier, 1
instance = comp, \X~0 , X~0, multiplier, 1
instance = comp, \RegA|Data_Out~12 , RegA|Data_Out~12, multiplier, 1
instance = comp, \RegA|Data_Out~14 , RegA|Data_Out~14, multiplier, 1
instance = comp, \RegA|Data_Out[1]~15 , RegA|Data_Out[1]~15, multiplier, 1
instance = comp, \RegA|Data_Out[7] , RegA|Data_Out[7], multiplier, 1
instance = comp, \adder|FA7|S~0 , adder|FA7|S~0, multiplier, 1
instance = comp, \RegA|Data_Out~11 , RegA|Data_Out~11, multiplier, 1
instance = comp, \RegA|Data_Out[6] , RegA|Data_Out[6], multiplier, 1
instance = comp, \RegA|Data_Out~10 , RegA|Data_Out~10, multiplier, 1
instance = comp, \RegA|Data_Out[5] , RegA|Data_Out[5], multiplier, 1
instance = comp, \RegA|Data_Out~9 , RegA|Data_Out~9, multiplier, 1
instance = comp, \RegA|Data_Out[4] , RegA|Data_Out[4], multiplier, 1
instance = comp, \RegA|Data_Out~8 , RegA|Data_Out~8, multiplier, 1
instance = comp, \RegA|Data_Out[3] , RegA|Data_Out[3], multiplier, 1
instance = comp, \adder|FA3|S~0 , adder|FA3|S~0, multiplier, 1
instance = comp, \RegA|Data_Out~7 , RegA|Data_Out~7, multiplier, 1
instance = comp, \RegA|Data_Out[2] , RegA|Data_Out[2], multiplier, 1
instance = comp, \RegA|Data_Out~6 , RegA|Data_Out~6, multiplier, 1
instance = comp, \RegA|Data_Out[1] , RegA|Data_Out[1], multiplier, 1
instance = comp, \RegA|Data_Out~4 , RegA|Data_Out~4, multiplier, 1
instance = comp, \RegA|Data_Out~5 , RegA|Data_Out~5, multiplier, 1
instance = comp, \RegA|Data_Out[0] , RegA|Data_Out[0], multiplier, 1
instance = comp, \RegB|Data_Out~8 , RegB|Data_Out~8, multiplier, 1
instance = comp, \RegB|Data_Out[7] , RegB|Data_Out[7], multiplier, 1
instance = comp, \RegB|Data_Out~7 , RegB|Data_Out~7, multiplier, 1
instance = comp, \RegB|Data_Out[6] , RegB|Data_Out[6], multiplier, 1
instance = comp, \RegB|Data_Out~6 , RegB|Data_Out~6, multiplier, 1
instance = comp, \RegB|Data_Out[5] , RegB|Data_Out[5], multiplier, 1
instance = comp, \RegB|Data_Out~5 , RegB|Data_Out~5, multiplier, 1
instance = comp, \RegB|Data_Out[4] , RegB|Data_Out[4], multiplier, 1
instance = comp, \RegB|Data_Out~4 , RegB|Data_Out~4, multiplier, 1
instance = comp, \RegB|Data_Out[3] , RegB|Data_Out[3], multiplier, 1
instance = comp, \RegB|Data_Out~3 , RegB|Data_Out~3, multiplier, 1
instance = comp, \RegB|Data_Out[2] , RegB|Data_Out[2], multiplier, 1
instance = comp, \RegB|Data_Out~2 , RegB|Data_Out~2, multiplier, 1
instance = comp, \RegB|Data_Out[1] , RegB|Data_Out[1], multiplier, 1
instance = comp, \AhexL|WideOr6~0 , AhexL|WideOr6~0, multiplier, 1
instance = comp, \AhexL|WideOr5~0 , AhexL|WideOr5~0, multiplier, 1
instance = comp, \AhexL|WideOr4~0 , AhexL|WideOr4~0, multiplier, 1
instance = comp, \AhexL|WideOr3~0 , AhexL|WideOr3~0, multiplier, 1
instance = comp, \AhexL|WideOr2~0 , AhexL|WideOr2~0, multiplier, 1
instance = comp, \AhexL|WideOr1~0 , AhexL|WideOr1~0, multiplier, 1
instance = comp, \AhexL|WideOr0~0 , AhexL|WideOr0~0, multiplier, 1
instance = comp, \AhexU|WideOr6~0 , AhexU|WideOr6~0, multiplier, 1
instance = comp, \AhexU|WideOr5~0 , AhexU|WideOr5~0, multiplier, 1
instance = comp, \AhexU|WideOr4~0 , AhexU|WideOr4~0, multiplier, 1
instance = comp, \AhexU|WideOr3~0 , AhexU|WideOr3~0, multiplier, 1
instance = comp, \AhexU|WideOr2~0 , AhexU|WideOr2~0, multiplier, 1
instance = comp, \AhexU|WideOr1~0 , AhexU|WideOr1~0, multiplier, 1
instance = comp, \AhexU|WideOr0~0 , AhexU|WideOr0~0, multiplier, 1
instance = comp, \BhexL|WideOr6~0 , BhexL|WideOr6~0, multiplier, 1
instance = comp, \BhexL|WideOr5~0 , BhexL|WideOr5~0, multiplier, 1
instance = comp, \BhexL|WideOr4~0 , BhexL|WideOr4~0, multiplier, 1
instance = comp, \BhexL|WideOr3~0 , BhexL|WideOr3~0, multiplier, 1
instance = comp, \BhexL|WideOr2~0 , BhexL|WideOr2~0, multiplier, 1
instance = comp, \BhexL|WideOr1~0 , BhexL|WideOr1~0, multiplier, 1
instance = comp, \BhexL|WideOr0~0 , BhexL|WideOr0~0, multiplier, 1
instance = comp, \BhexU|WideOr6~0 , BhexU|WideOr6~0, multiplier, 1
instance = comp, \BhexU|WideOr5~0 , BhexU|WideOr5~0, multiplier, 1
instance = comp, \BhexU|WideOr4~0 , BhexU|WideOr4~0, multiplier, 1
instance = comp, \BhexU|WideOr3~0 , BhexU|WideOr3~0, multiplier, 1
instance = comp, \BhexU|WideOr2~0 , BhexU|WideOr2~0, multiplier, 1
instance = comp, \BhexU|WideOr1~0 , BhexU|WideOr1~0, multiplier, 1
instance = comp, \BhexU|WideOr0~0 , BhexU|WideOr0~0, multiplier, 1
instance = comp, \~QUARTUS_CREATED_UNVM~ , ~QUARTUS_CREATED_UNVM~, multiplier, 1
instance = comp, \~QUARTUS_CREATED_ADC1~ , ~QUARTUS_CREATED_ADC1~, multiplier, 1
instance = comp, \~QUARTUS_CREATED_ADC2~ , ~QUARTUS_CREATED_ADC2~, multiplier, 1
design_name = hard_block
instance = comp, \~ALTERA_TMS~~ibuf , ~ALTERA_TMS~~ibuf, hard_block, 1
instance = comp, \~ALTERA_TCK~~ibuf , ~ALTERA_TCK~~ibuf, hard_block, 1
instance = comp, \~ALTERA_TDI~~ibuf , ~ALTERA_TDI~~ibuf, hard_block, 1
instance = comp, \~ALTERA_CONFIG_SEL~~ibuf , ~ALTERA_CONFIG_SEL~~ibuf, hard_block, 1
instance = comp, \~ALTERA_nCONFIG~~ibuf , ~ALTERA_nCONFIG~~ibuf, hard_block, 1
instance = comp, \~ALTERA_nSTATUS~~ibuf , ~ALTERA_nSTATUS~~ibuf, hard_block, 1
instance = comp, \~ALTERA_CONF_DONE~~ibuf , ~ALTERA_CONF_DONE~~ibuf, hard_block, 1
